import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as l,a as i}from"./app-DDtjkVY-.js";const n={},e=i(`<h1 id="oracle数据库" tabindex="-1"><a class="header-anchor" href="#oracle数据库"><span>Oracle数据库</span></a></h1><blockquote><p>[!tip] 当我们学习一个新知识的时候，往往是先学会怎么用，然后再使用的过程中慢慢理解原理，这样也许不失为一种高效的学习方式</p></blockquote><h2 id="数据库语言的分类" tabindex="-1"><a class="header-anchor" href="#数据库语言的分类"><span>数据库语言的分类</span></a></h2><p>数据库语言一般分为四种</p><ul><li>DDL：数据库定义语言：create、drop</li><li>DML：数据库操作语言：insert、update、delete</li><li>DQL：数据库查询语言：select</li><li>DCL：数据库控制语言：grant、revoke</li></ul><blockquote><p>[!warning] 在数据库语言中，对大小写是不敏感的</p></blockquote><h2 id="select语句的用法" tabindex="-1"><a class="header-anchor" href="#select语句的用法"><span>Select语句的用法</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> column1,column2 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询表中某几个列的数据</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table2; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询表中所有列的数据</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="order-by子句" tabindex="-1"><a class="header-anchor" href="#order-by子句"><span>Order by子句</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ASC</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询结果根据id排序，其中ASC表示升序，DESC表示降序（不加ASC也默认是升序）</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ASC</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> NULLS</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FIRST</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">如果出现了null，就将所有带有null的放到前面</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="distinct子句" tabindex="-1"><a class="header-anchor" href="#distinct子句"><span>Distinct子句</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select distinct</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> column1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">过滤掉了column1中重复项后输出</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="where子句" tabindex="-1"><a class="header-anchor" href="#where子句"><span>Where子句</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询id为1的数据</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table2 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> and</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> column1 </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;alice&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询id为1并且某一列是alice的数据</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table3 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">between</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> and</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 60</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询id在10到60之间的数据</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table3 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">); </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询id为1或者id为3的数据</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table4 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> column1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">like</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;alic%&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">%是一个通配符，查询column1中值为alic开头的数据</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="and和or子句" tabindex="-1"><a class="header-anchor" href="#and和or子句"><span>And和Or子句</span></a></h2><ul><li>And子句在上面介绍过，表示两个条件同时满足</li><li>Or字句表示两个条件满足一个即可</li><li>二者可以结合使用，可以多次使用</li></ul><h2 id="fetch子句" tabindex="-1"><a class="header-anchor" href="#fetch子句"><span>Fetch子句</span></a></h2><blockquote><p>FETCH 子句在 Oracle 中可以用来限制查询返回的行数，但仅能在12c以上版本使用</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> score </span><span style="color:#D73A49;--shiki-dark:#C678DD;">fetch</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> next</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 5</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> rows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> only; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">获取前五行内容，其中的 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">next</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ... </span><span style="color:#D73A49;--shiki-dark:#C678DD;">rows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> 可以替换为 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">first</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ... </span><span style="color:#D73A49;--shiki-dark:#C678DD;">row</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table2 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> score </span><span style="color:#D73A49;--shiki-dark:#C678DD;">fetch</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> next</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 5</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> rows</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> with</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ties; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">如果前五行之后有并列第五的，也会包含在内</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table3 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> score </span><span style="color:#D73A49;--shiki-dark:#C678DD;">fetch</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> next</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> percent </span><span style="color:#D73A49;--shiki-dark:#C678DD;">rows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> only; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">查询前5%</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table4 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> score offset </span><span style="color:#005CC5;--shiki-dark:#D19A66;">10</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> rows</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> fetch</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> next</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 5</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> rows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">跳过前10之后的五行，实际上是11~15行</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="in子句" tabindex="-1"><a class="header-anchor" href="#in子句"><span>In子句</span></a></h2><blockquote><p>基本用法上面已经介绍过了，这里说明一下还可用not in 以及执行子子语句</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    select</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> table1 </span><span style="color:#D73A49;--shiki-dark:#C678DD;">where</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> column1 </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;alice&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">); </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">先执行里面的语句筛选出id，然后再进行外部的查询，查找id在in的范围里面的数据</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="like子句" tabindex="-1"><a class="header-anchor" href="#like子句"><span>Like子句</span></a></h2><blockquote><p>前面已经有过样例了，这里介绍几个通配符</p></blockquote><ul><li>% 代表0个或多个字符 alic%</li><li>_ 代表一个字符 alic_</li><li>[charlist] 字符表中的任意一个字符 [abc]lice 搜索alice blice clice</li><li>[!charlist]或者[^charlist] 不在字符表中的任何一个字符 [ab] 排除alice blice</li></ul>`,25),r=[e];function o(p,k){return l(),a("div",null,r)}const d=s(n,[["render",o],["__file","Oracle学习笔记.html.vue"]]),h=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","title":"Oracle数据库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"数据库语言的分类","slug":"数据库语言的分类","link":"#数据库语言的分类","children":[]},{"level":2,"title":"Select语句的用法","slug":"select语句的用法","link":"#select语句的用法","children":[]},{"level":2,"title":"Order by子句","slug":"order-by子句","link":"#order-by子句","children":[]},{"level":2,"title":"Distinct子句","slug":"distinct子句","link":"#distinct子句","children":[]},{"level":2,"title":"Where子句","slug":"where子句","link":"#where子句","children":[]},{"level":2,"title":"And和Or子句","slug":"and和or子句","link":"#and和or子句","children":[]},{"level":2,"title":"Fetch子句","slug":"fetch子句","link":"#fetch子句","children":[]},{"level":2,"title":"In子句","slug":"in子句","link":"#in子句","children":[]},{"level":2,"title":"Like子句","slug":"like子句","link":"#like子句","children":[]}],"git":{"createdTime":1716472672000,"updatedTime":1716472672000,"contributors":[{"name":"Vinci","email":"1341060890@qq.com","commits":1}]},"readingTime":{"minutes":2.47,"words":742},"filePathRelative":"技术文章/数据库/Oracle学习笔记.md","localizedDate":"2024年5月23日","excerpt":"\\n<blockquote>\\n<p>[!tip]\\n当我们学习一个新知识的时候，往往是先学会怎么用，然后再使用的过程中慢慢理解原理，这样也许不失为一种高效的学习方式</p>\\n</blockquote>\\n<h2>数据库语言的分类</h2>\\n<p>数据库语言一般分为四种</p>\\n<ul>\\n<li>DDL：数据库定义语言：create、drop</li>\\n<li>DML：数据库操作语言：insert、update、delete</li>\\n<li>DQL：数据库查询语言：select</li>\\n<li>DCL：数据库控制语言：grant、revoke</li>\\n</ul>\\n<blockquote>\\n<p>[!warning]\\n在数据库语言中，对大小写是不敏感的</p>\\n</blockquote>"}');export{d as comp,h as data};
