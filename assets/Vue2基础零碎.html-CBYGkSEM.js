import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as i,a as n}from"./app-5EKgbxwj.js";const l="/VinciGeek/assets/1714290772449-CmUZ5XiW.png",e={},r=n(`<h1 id="vue2基础零碎" tabindex="-1"><a class="header-anchor" href="#vue2基础零碎"><span>Vue2基础零碎</span></a></h1><blockquote><p>![warning] 本文介绍的是基于Vue2的基础零碎，主要介绍基本语法</p></blockquote><h2 id="vue实例" tabindex="-1"><a class="header-anchor" href="#vue实例"><span>Vue实例</span></a></h2><p>Vue.js的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进Dom的系统：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;app&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  {{ message }}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> app</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;">  new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	el</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;#app&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	message</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;Hello Vue!&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就成功创建了第一个Vue应用</p><h2 id="组件化应用" tabindex="-1"><a class="header-anchor" href="#组件化应用"><span>组件化应用</span></a></h2><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">component</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;todo-item&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&lt;li&gt;这是一个组件&lt;li&gt;&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> app</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">...</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就注册好了一个组件，可以在另一段代码中使用</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>&lt;ol&gt;</span></span>
<span class="line"><span>	&lt;todo-item&gt;&lt;/todo-item&gt;</span></span>
<span class="line"><span>&lt;ol&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这样的缺点是每个待办项会被渲染相同的文本，也就是说组件里面的内容，一旦修改的话所有使用这个组件的地方都被修改了。我们往往需要定制修改一些东西，做法如下</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">component</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;todo-item&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	props</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:[</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;todo&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&lt;li&gt;{{todo.text}}&lt;li&gt;&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们引入了conponent中的一个属性：props，这样我们就可以使用v-bind指令将待办项传到循环输出的每个组件中：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> app7</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	el</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;app-7&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">		gorceryList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:[</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">			{</span><span style="color:#24292E;--shiki-dark:#E06C75;">id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">text</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;蔬菜&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">			{</span><span style="color:#24292E;--shiki-dark:#E06C75;">id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">text</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;奶酪&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">			{</span><span style="color:#24292E;--shiki-dark:#E06C75;">id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">text</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;随便其他什么人吃的东西&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">		]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> id</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;app-7&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">ol</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">		&lt;</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">todo-item</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">			v-for</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;item in groceryList&quot;</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#D19A66;">			v-bind</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">todo</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;item&quot;</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#D19A66;">			v-bind</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">key</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;item.id&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">		&gt;&lt;/</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">todo-item</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">ol</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生命周期钩子" tabindex="-1"><a class="header-anchor" href="#生命周期钩子"><span>生命周期钩子</span></a></h2><p>在Vue实例化的过程中会有一个阶段，在不同的阶段会有不同的周期钩子，我们在钩子上挂载代码，从而帮助我们在不同的阶段执行不同的代码</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> app</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#24292E;--shiki-dark:#E06C75;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">	created</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">		console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;我被创建了&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面就是一个对于生命周期钩子用法的演示</p><p>实际上的生命周期图如下：</p><figure><img src="`+l+`" alt="1714290772449" tabindex="0" loading="lazy"><figcaption>1714290772449</figcaption></figure><h2 id="模板语法" tabindex="-1"><a class="header-anchor" href="#模板语法"><span>模板语法</span></a></h2><h3 id="文本插值" tabindex="-1"><a class="header-anchor" href="#文本插值"><span>文本插值</span></a></h3><p>最常见的方法就是通过两个大括号插值</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;{{msg}}&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当msg的property更新以后，对应文本内容就会改变</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> v-once</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;{{msg}}&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>v-once</code>可以实现一次性差值，以后不会改变</p><h3 id="html插值" tabindex="-1"><a class="header-anchor" href="#html插值"><span>html插值</span></a></h3><p>如果想要输出html的话，需要用v-html标签</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> v-html</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;rawHtml&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但实际上这样并不安全</p><h3 id="attribute插值" tabindex="-1"><a class="header-anchor" href="#attribute插值"><span>Attribute插值</span></a></h3><p>可以使用 <code>v-bind</code>来将某些属性绑定到标签上</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> v-bind</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">id</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">=1&gt;&lt;/span&gt;</span></span>
<span class="line"><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">&lt;button</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> v-bind</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;alice&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">span</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指令" tabindex="-1"><a class="header-anchor" href="#指令"><span>指令</span></a></h3><p>指令就是v-开头的属性，前面的v-html和v-bind都是指令。</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> v-if</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;seen&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;现在你看到我了&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">a</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> v-bind</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">href</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;url&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">//点击跳转到某个链接</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">button</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> v-on</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">click</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;handle&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">button</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">//点击以后处理某个时间</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实你可以看出来，<code>v-bind:</code>后面的东西，实际上就是你写html的时候的那些标签里面的属性，只不过换了一种方式</p><blockquote><p>[!tip] 部分指令是有缩写的，比如 <code>v-bind:</code>可以直接缩写为 <code>:</code>，<code>v-on:</code>可以直接缩写为 <code>@</code></p></blockquote><h2 id="计算属性和侦听属性" tabindex="-1"><a class="header-anchor" href="#计算属性和侦听属性"><span>计算属性和侦听属性</span></a></h2><h3 id="计算属性" tabindex="-1"><a class="header-anchor" href="#计算属性"><span>计算属性</span></a></h3><p>我们可以将一段代码提取到计算属性中</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#6F42C1;--shiki-dark:#D19A66;"> id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;example&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;Original message: &quot;{{ message }}&quot;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;Computed reversed message: &quot;{{ reversedMessage }}&quot;&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> vm</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	el</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;#example&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">		message</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;hello&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	computed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">		reversedMessage</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">			return</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> this</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">message</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E06C75;">split</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">reverse</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">join</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>computed</code>就是计算属性，在里面创建了 <code>reversedMessage</code>，并实际上给他赋予了函数的返回值。当我们再次调用 <code>vm.reversedMessage</code>就得到了message的翻转</p><blockquote><p>[!note] 我们可以同样将计算属性转换为方法，他们得到的结果是相同的，但是不同的是<strong>计算属性是基于他们的响应式依赖进行缓存的</strong>。这就意味着只要message不变，那么 <code>computed</code>里面的东西就不会再次执行，但是如果使用方法的话每次都会重新执行一遍，所以相对来说计算属性更加高效</p></blockquote><h3 id="侦听器" tabindex="-1"><a class="header-anchor" href="#侦听器"><span>侦听器</span></a></h3><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> vm</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	el</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;#example&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">		message</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;hello&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	watch</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 如果 \`question\` 发生改变，这个函数就会运行</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    question</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">newQuestion</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">oldQuestion</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E5C07B;">      this</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E06C75;">answer</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Waiting for you to stop typing...&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E5C07B;">      this</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">debouncedGetAnswer</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上就是看某个变量有没有变化，如果变化了就执行这个函数</p><h2 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model"><span>v-model</span></a></h2><p><code>v-model</code>是vue中的一个非常重要的指令，用于在<strong>表单输入</strong>和<strong>应用状态</strong>之间建立双向绑定，可以确保表单输入的值和数据模型中的值保持同步。相当于同时绑定了 <code>value</code>属性和 <code>input</code>事件</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">input</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> v-model</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;message&quot;</span><span style="color:#6F42C1;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;"> placeholder</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;输入一些文本&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;输入的消息是: {{ message }}&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">p</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">script</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">export default </span><span style="color:#24292E;--shiki-dark:#C678DD;">{</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    return {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#E06C75;">      message</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">script</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样的话输入的信息可以实时显示出来</p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><ul><li>组件的最大作用是可以复用，这也类似于函数或方法的复用，非常符合软件工程(#<sup>.</sup>#)</li></ul><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 引入Vue</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E06C75;"> Vue</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;vue&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 引入组件</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E06C75;"> MyComponent</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;./MyComponent.vue&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 全局注册组件</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">component</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;my-component&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  data</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">      count</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me {{ count }} times.&lt;/button&gt;&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 创建Vue实例</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  el</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;#app&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码是对组件的全局注册，注册以后可以在任何地方使用，并且可以使用任意次数</p><p>使用方法如下：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">my-component</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">my-component</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;!-- 其他内容 --&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">div</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">template</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!tip] 值得注意的是，在组件中的data必须是一个函数function，而不是直接返回变量和值</p></blockquote>`,61),p=[r];function o(t,d){return i(),a("div",null,p)}const h=s(e,[["render",o],["__file","Vue2基础零碎.html.vue"]]),B=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/Vue%E5%9F%BA%E7%A1%80/Vue2%E5%9F%BA%E7%A1%80%E9%9B%B6%E7%A2%8E.html","title":"Vue2基础零碎","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Vue实例","slug":"vue实例","link":"#vue实例","children":[]},{"level":2,"title":"组件化应用","slug":"组件化应用","link":"#组件化应用","children":[]},{"level":2,"title":"生命周期钩子","slug":"生命周期钩子","link":"#生命周期钩子","children":[]},{"level":2,"title":"模板语法","slug":"模板语法","link":"#模板语法","children":[{"level":3,"title":"文本插值","slug":"文本插值","link":"#文本插值","children":[]},{"level":3,"title":"html插值","slug":"html插值","link":"#html插值","children":[]},{"level":3,"title":"Attribute插值","slug":"attribute插值","link":"#attribute插值","children":[]},{"level":3,"title":"指令","slug":"指令","link":"#指令","children":[]}]},{"level":2,"title":"计算属性和侦听属性","slug":"计算属性和侦听属性","link":"#计算属性和侦听属性","children":[{"level":3,"title":"计算属性","slug":"计算属性","link":"#计算属性","children":[]},{"level":3,"title":"侦听器","slug":"侦听器","link":"#侦听器","children":[]}]},{"level":2,"title":"v-model","slug":"v-model","link":"#v-model","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]}],"git":{"createdTime":1716472672000,"updatedTime":1716472672000,"contributors":[{"name":"Vinci","email":"1341060890@qq.com","commits":1}]},"readingTime":{"minutes":4.41,"words":1324},"filePathRelative":"技术文章/Vue基础/Vue2基础零碎.md","localizedDate":"2024年5月23日","excerpt":"\\n<blockquote>\\n<p>![warning]\\n本文介绍的是基于Vue2的基础零碎，主要介绍基本语法</p>\\n</blockquote>\\n<h2>Vue实例</h2>\\n<p>Vue.js的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进Dom的系统：</p>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\" style=\\"background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"color:#22863A;--shiki-dark:#E06C75\\">div</span><span style=\\"color:#6F42C1;--shiki-dark:#D19A66\\"> id</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">=</span><span style=\\"color:#032F62;--shiki-dark:#98C379\\">\\"app\\"</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">  {{ message }}</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&lt;/</span><span style=\\"color:#22863A;--shiki-dark:#E06C75\\">div</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{h as comp,B as data};
